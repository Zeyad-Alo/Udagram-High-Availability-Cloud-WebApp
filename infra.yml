Description: >
  Udagram high-availability webapp cloudformation template for provisioning the networking infrastructure.



Parameters:

  EnvironmentName:
    Type: String

  VpcCIDR:
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Type: String
    Default: 10.0.0.0/24

  PublicSubnet2CIDR:
    Type: String
    Default: 10.0.1.0/24

  PrivateSubnet1CIDR:
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet2CIDR:
    Type: String
    Default: 10.0.3.0/24



Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} VPC


  InternetGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} IGW

  InternetGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGW
      VpcId: !Ref VPC


  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
      VpcId: !Ref VPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '']
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
      VpcId: !Ref VPC

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
      VpcId: !Ref VPC

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '']
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
      VpcId: !Ref VPC

      
  NatGW1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGWAttachment
    Properties:
      Domain: vpc

  NatGW2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGWAttachment
    Properties:
      Domain: vpc

  NatGW1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGW1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1

  NatGW2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGW2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2


  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Route Table
      VpcId: !Ref VPC

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGW
      RouteTableId: !Ref PublicRouteTable

  PubSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PubSubnet2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Route Table (AZ1)
      VpcId: !Ref VPC

  DefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGW1
      RouteTableId: !Ref PrivateRouteTable1
      
  PvtSubnet1RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      SubnetId: !Ref PrivateSubnet1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Route Table (AZ2)
      VpcId: !Ref VPC

  DefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGW2
      RouteTableId: !Ref PrivateRouteTable2
      
  PvtSubnet2RTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      SubnetId: !Ref PrivateSubnet2



Outputs:

  VPC:
    Description: Udagram's Vpc
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-VPCID

  PublicSubnets:
    Description: Udagram's Public Subnets
    Value: !Join [ "," , [!Ref PublicSubnet1, !Ref PublicSubnet2] ]
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NETS

  PrivateSubnets:
    Description: Udagram's Private Subnets
    Value: !Join [ "," , [!Ref PrivateSubnet1, !Ref PrivateSubnet2] ]
    Export:
      Name: !Sub ${EnvironmentName}-PVT-NETS

  PublicSubnet1:
    Description: Udagram's AZ1 Public Subnet
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NET-AZ1

  PublicSubnet2:
    Description: Udagram's AZ2 Public Subnet
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PUB-NET-AZ2

  PrivateSubnet1:
    Description: Udagram's AZ1 Private Subnet
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-PVT-NET-AZ1

  PrivateSubnet2:
    Description: Udagram's AZ2 Private Subnet
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-PVT-NET-AZ2